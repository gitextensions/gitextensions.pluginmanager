#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 2.0.1.{build}

# version suffix, if any (e.g. '-RC1', '-beta' otherwise '')
environment:
  version_suffix: ''

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image:
- Visual Studio 2022

# enable patching of Directory.Build.props
dotnet_csproj:
  patch: true
  file: '**\*.props'
  version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}$(version_suffix)'
  package_version: '{version}$(version_suffix)'

#---------------------------------#
#       build configuration       #
#---------------------------------#

build_script:
- ps: .\tools\Prepare-Release.ps1

#---------------------------------#
#       tests configuration       #
#---------------------------------#

test_script:
- ps: .\tools\Run-Tests.ps1

after_test:
- ps: |
    # do not sign artifacts for PR to release branches, publish dev builds instead
    if ($env:APPVEYOR_PULL_REQUEST_TITLE) {
        Write-Host "[INFO]: Do not sign artifacts from PR to release branch"
        Get-ChildItem GitExtensions.PluginManager*.nupkg | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
        Get-ChildItem GitExtensions.PluginManager*.zip | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
        Exit-AppVeyorBuild
        return
    }
    else {
        Write-Host "[INFO]: Prepare combined artifact for signing on release branch"
        Write-Host "Creating combined build artifact ..."
        $nupkg = (Resolve-Path .\GitExtensions.PluginManager*.nupkg)[0].Path;
        $zip = (Resolve-Path .\GitExtensions.PluginManager*.zip)[0].Path;
        $combined = ".\GitExtensions.PluginManager.$($env:APPVEYOR_BUILD_VERSION)$($env:version_suffix).combined-unsigned.zip"
        Compress-Archive -LiteralPath $nupkg, $zip -CompressionLevel NoCompression -DestinationPath $combined -Force
    }

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
- path: .\GitExtensions.PluginManager.*.combined-unsigned.zip

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

deploy:
- provider: Webhook
  on:
    ARTIFACT_SIGNING_ENABLED: true
  url: https://app.signpath.io/API/v1/7c19b2cf-90f7-4d15-9b12-1b615f7c18c4/Integrations/AppVeyor?ProjectKey=gitextensions.pluginmanager&SigningPolicyKey=release-signing
  on_build_success: true
  on_build_failure: false
  on_build_status_changed: false
  method: POST
  authorization:
     secure: IlLI/MbhdzmXF/WB2G84zYsDWePXJqHBWDb1zBPxxXvGgx0WRxzMZxuBsvCOcZvbPTRF+UcGp0d5/HT8xZUEjA==
